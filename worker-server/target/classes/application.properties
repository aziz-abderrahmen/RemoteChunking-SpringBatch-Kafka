spring.application.name=worker-server
server.port=6666
logging.level.org.springframework.cloud.stream=INFO
logging.level.org.apache.kafka=INFO
management.endpoints.web.exposure.exclude=loggers

# db config

#refers to the dialect file created in the previous step
spring.jpa.database-platform=com.cfa.configs.SQLiteDialectConfigs
spring.jpa.properties.hibernate.dialect=com.cfa.configs.SQLiteDialectConfigs
#refers to the dialect file created in the previous step
spring.datasource.url = jdbc:sqlite:sqlitesamplecfa.db
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.hbm2ddl.auto
spring.datasource.driver-class-name=org.sqlite.JDBC
spring.datasource.username=cfa
spring.datasource.password=admin

spring.main.allow-bean-definition-overriding=true


# when autoAddPartitions is true minPartitionCount = instance-count * concurrency, default 1
spring.cloud.stream.instanceCount=2

spring.kafka.consumer.max-poll-records=1
spring.cloud.stream.kafka.bindings.input.consumer.autoCommitOffset=true
spring.cloud.stream.kafka.bindings.input.consumer.auto-rebalance-enabled=true
spring.cloud.stream.kafka.binder.autoAddPartitions=true
# input config
spring.cloud.stream.bindings.input.binder=kafka
spring.cloud.stream.bindings.input.consumer.concurrency=4
spring.cloud.stream.bindings.input.consumer.partitioned=true
spring.cloud.stream.bindings.input.destination=workern
spring.cloud.stream.bindings.input.group=product
spring.cloud.stream.bindings.input.contentType=application/json
spring.cloud.stream.kafka.binder.min-partition-count=1
# input config
spring.cloud.stream.bindings.output.destination=workern
spring.cloud.stream.bindings.output.group=product
spring.cloud.stream.bindings.output.binder=kafka

spring.cloud.config.override-system-properties=false
spring.cloud.config.allow-override=true
spring.cloud.config.override-none=false

#spring.main.allow-bean-definition-overriding=true
spring.cloud.config.enabled=false

spring.batch.job.enabled=false

spring.kafka.producer.key-serializer=com.cfa.configs.hazelcast.serializer.CustomSerializer
spring.kafka.producer.value-serializer=com.cfa.configs.hazelcast.serializer.CustomSerializer
spring.kafka.consumer.key-deserializer=com.cfa.configs.hazelcast.deserializer.CustomDeserializer
spring.kafka.consumer.value-deserializer=com.cfa.configs.hazelcast.deserializer.CustomDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*